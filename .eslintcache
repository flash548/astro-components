[{"/Users/christopherzell/Developer/common-api-driver/src/index.js":"1","/Users/christopherzell/Developer/common-api-driver/src/App.js":"2","/Users/christopherzell/Developer/common-api-driver/src/reportWebVitals.js":"3","/Users/christopherzell/Developer/common-api-driver/src/Astro/AstroTable.js":"4","/Users/christopherzell/Developer/common-api-driver/src/Astro/AstroStatusBar.js":"5","/Users/christopherzell/Developer/common-api-driver/src/Astro/AstroButton.js":"6","/Users/christopherzell/Developer/common-api-driver/src/Astro/AstroClock.js":"7","/Users/christopherzell/Developer/common-api-driver/src/Astro/AstroPushButton.js":"8","/Users/christopherzell/Developer/common-api-driver/src/Astro/AstroTabCtrl.js":"9","/Users/christopherzell/Developer/common-api-driver/src/Astro/AstroProgress.js":"10","/Users/christopherzell/Developer/common-api-driver/src/Astro/AstroDialog.js":"11","/Users/christopherzell/Developer/common-api-driver/src/Astro/AstroIcon.js":"12","/Users/christopherzell/Developer/common-api-driver/src/Astro/AstroNotification.js":"13","/Users/christopherzell/Developer/common-api-driver/src/Astro/AstroStatusIcon.js":"14","/Users/christopherzell/Developer/common-api-driver/src/Astro/AstroSegmentedButton.js":"15","/Users/christopherzell/Developer/common-api-driver/src/Astro/AstroToggle.js":"16","/Users/christopherzell/Developer/common-api-driver/src/Astro/AstroGrid.js":"17","/Users/christopherzell/Developer/common-api-driver/src/Squadron.js":"18","/Users/christopherzell/Developer/common-api-driver/src/Airman.js":"19","/Users/christopherzell/Developer/astro-components/src/index.js":"20","/Users/christopherzell/Developer/astro-components/src/reportWebVitals.js":"21","/Users/christopherzell/Developer/astro-components/src/App.js":"22","/Users/christopherzell/Developer/astro-components/src/Astro/AstroStatusBar.js":"23","/Users/christopherzell/Developer/astro-components/src/Airman.js":"24","/Users/christopherzell/Developer/astro-components/src/Squadron.js":"25","/Users/christopherzell/Developer/astro-components/src/Astro/AstroTabCtrl.js":"26","/Users/christopherzell/Developer/astro-components/src/Astro/AstroDialog.js":"27","/Users/christopherzell/Developer/astro-components/src/Astro/AstroButton.js":"28","/Users/christopherzell/Developer/astro-components/src/Astro/AstroGrid.js":"29"},{"size":500,"mtime":1607565189830,"results":"30","hashOfConfig":"31"},{"size":1219,"mtime":1607821835265,"results":"32","hashOfConfig":"31"},{"size":362,"mtime":1607090668064,"results":"33","hashOfConfig":"31"},{"size":1622,"mtime":1607735685043,"results":"34","hashOfConfig":"31"},{"size":427,"mtime":1607822019934,"results":"35","hashOfConfig":"31"},{"size":293,"mtime":1607735684402,"results":"36","hashOfConfig":"31"},{"size":274,"mtime":1607735684467,"results":"37","hashOfConfig":"31"},{"size":904,"mtime":1607735684807,"results":"38","hashOfConfig":"31"},{"size":2144,"mtime":1607821295530,"results":"39","hashOfConfig":"31"},{"size":297,"mtime":1607735684765,"results":"40","hashOfConfig":"31"},{"size":1831,"mtime":1607744107110,"results":"41","hashOfConfig":"31"},{"size":375,"mtime":1607735684656,"results":"42","hashOfConfig":"31"},{"size":372,"mtime":1607735684698,"results":"43","hashOfConfig":"31"},{"size":144,"mtime":1607735684935,"results":"44","hashOfConfig":"31"},{"size":2234,"mtime":1607735684847,"results":"45","hashOfConfig":"31"},{"size":963,"mtime":1607735685080,"results":"46","hashOfConfig":"31"},{"size":1497,"mtime":1607875327060,"results":"47","hashOfConfig":"31"},{"size":172,"mtime":1607735921438,"results":"48","hashOfConfig":"31"},{"size":9514,"mtime":1607823926246,"results":"49","hashOfConfig":"31"},{"size":500,"mtime":1632659405704,"results":"50","hashOfConfig":"51"},{"size":362,"mtime":1632659405705,"results":"52","hashOfConfig":"51"},{"size":1219,"mtime":1632659405697,"results":"53","hashOfConfig":"51"},{"size":427,"mtime":1632659405699,"results":"54","hashOfConfig":"51"},{"size":9514,"mtime":1632659405696,"results":"55","hashOfConfig":"51"},{"size":172,"mtime":1632659405703,"results":"56","hashOfConfig":"51"},{"size":2144,"mtime":1632659405700,"results":"57","hashOfConfig":"51"},{"size":1831,"mtime":1632659405698,"results":"58","hashOfConfig":"51"},{"size":293,"mtime":1632659405697,"results":"59","hashOfConfig":"51"},{"size":1497,"mtime":1632659405698,"results":"60","hashOfConfig":"51"},{"filePath":"61","messages":"62","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"63"},"45gy7m",{"filePath":"64","messages":"65","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"66","messages":"67","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"63"},{"filePath":"68","messages":"69","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"70","messages":"71","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"72","messages":"73","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"63"},{"filePath":"74","messages":"75","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"76","messages":"77","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"78","messages":"79","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"80","usedDeprecatedRules":"63"},{"filePath":"81","messages":"82","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"83","messages":"84","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"63"},{"filePath":"85","messages":"86","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"87","messages":"88","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"89","usedDeprecatedRules":"63"},{"filePath":"90","messages":"91","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"92","messages":"93","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"94","messages":"95","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"96","messages":"97","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"98","messages":"99","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"100","usedDeprecatedRules":"63"},{"filePath":"101","messages":"102","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"103","messages":"104","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"105"},"19xfjv4",{"filePath":"106","messages":"107","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"105"},{"filePath":"108","messages":"109","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"105"},{"filePath":"110","messages":"111","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"105"},{"filePath":"112","messages":"113","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"114","usedDeprecatedRules":"105"},{"filePath":"115","messages":"116","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"100","usedDeprecatedRules":"105"},{"filePath":"117","messages":"118","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"80","usedDeprecatedRules":"105"},{"filePath":"119","messages":"120","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"105"},{"filePath":"121","messages":"122","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"105"},{"filePath":"123","messages":"124","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"125","usedDeprecatedRules":"126"},"/Users/christopherzell/Developer/common-api-driver/src/index.js",[],["127","128"],"/Users/christopherzell/Developer/common-api-driver/src/App.js",[],"/Users/christopherzell/Developer/common-api-driver/src/reportWebVitals.js",[],"/Users/christopherzell/Developer/common-api-driver/src/Astro/AstroTable.js",["129"],"/Users/christopherzell/Developer/common-api-driver/src/Astro/AstroStatusBar.js",[],"/Users/christopherzell/Developer/common-api-driver/src/Astro/AstroButton.js",[],"/Users/christopherzell/Developer/common-api-driver/src/Astro/AstroClock.js",[],"/Users/christopherzell/Developer/common-api-driver/src/Astro/AstroPushButton.js",[],"/Users/christopherzell/Developer/common-api-driver/src/Astro/AstroTabCtrl.js",["130"],"import React from 'react';\nimport { v4 as uuidv4 } from 'uuid';\n/* eslint-disable no-unused-vars */\nimport { RuxTabs } from '@astrouxds/rux-tabs/rux-tabs.js';\n/* eslint-enable no-unused-vars */\n\nconst findByType = (children, component) => {\n  const result = [];\n  /* This is the array of result since Article can have multiple times the same sub-component */\n  const type = [component.displayName] || [component.name];\n  /* We can store the actual name of the component through the displayName or name property of our sub-component */\n  React.Children.forEach(children, child => {\n      result.push(child);\n   });\n  /* Then we go through each React children, if one of matches the name of the sub-component weâ€™re looking for we put it in the result array */\n  return result;\n};\n\nconst Tab = () => null;\n\nexport default function AstroTabCtrl(props) {\n    \n    var tabContent = [];\n    var tabHeaders = [];\n    const renderTabs = () => {\n        const { children } = props;\n        const tabs = findByType(children, Tab);\n        // If we donâ€™t find any we return null\n        if (!tabs || tabs.length === 0) {\n            return null;\n        }\n\n        // always make sure there's a default selected if\n        // user doesn't specify\n        let foundSelected = false;\n        for (let tab of tabs) {\n            if (tab.props.selected) {\n                foundSelected = true;\n                break;\n            }\n        }\n        \n        for (let tab of tabs) {\n            let id = uuidv4();\n            tabContent.push({id, children: tab.props.children});\n            tabHeaders.push(<rux-tab key={id} id={id} selected={!foundSelected ? true : tab.props.selected}>{tab.props.title}</rux-tab>)\n            foundSelected = true;\n        }\n        return tabHeaders;\n    }\n\n    return (\n        <>\n            <rux-tabs id={props.id}>\n                {renderTabs()}\n            </rux-tabs>\n            <rux-tab-panels aria-labelledby={props.id}>\n                {tabContent.map(x => <rux-tab-panel key={x.id} aria-labelledby={x.id}>{x.children}</rux-tab-panel>)}\n            </rux-tab-panels>\n        </>\n    )\n}\n\nAstroTabCtrl.Tab = Tab;","/Users/christopherzell/Developer/common-api-driver/src/Astro/AstroProgress.js",[],"/Users/christopherzell/Developer/common-api-driver/src/Astro/AstroDialog.js",[],"/Users/christopherzell/Developer/common-api-driver/src/Astro/AstroIcon.js",[],"/Users/christopherzell/Developer/common-api-driver/src/Astro/AstroNotification.js",["131"],"import React from 'react';\nimport { RuxNotification } from '@astrouxds/rux-notification/rux-notification.js';\n\nexport default function AstroNotification(props) {\n\n    \n    if (props.open) {\n        setTimeout(props.close, props.timeout);\n\n        return (\n            <rux-notification {...props}></rux-notification>\n        )\n    }\n    else {\n        return null;\n    }\n}","/Users/christopherzell/Developer/common-api-driver/src/Astro/AstroStatusIcon.js",[],"/Users/christopherzell/Developer/common-api-driver/src/Astro/AstroSegmentedButton.js",["132","133"],"/Users/christopherzell/Developer/common-api-driver/src/Astro/AstroToggle.js",[],"/Users/christopherzell/Developer/common-api-driver/src/Astro/AstroGrid.js",["134"],"/Users/christopherzell/Developer/common-api-driver/src/Squadron.js",["135"],"import React from 'react';\n\nexport default class Squadron extends React.Component {\n\n    constructor() {\n        super();\n    }\n\n    render() {\n        return null\n    }\n\n}","/Users/christopherzell/Developer/common-api-driver/src/Airman.js",["136"],"/Users/christopherzell/Developer/astro-components/src/index.js",[],["137","138"],"/Users/christopherzell/Developer/astro-components/src/reportWebVitals.js",[],"/Users/christopherzell/Developer/astro-components/src/App.js",[],"/Users/christopherzell/Developer/astro-components/src/Astro/AstroStatusBar.js",[],"/Users/christopherzell/Developer/astro-components/src/Airman.js",["139"],"import React from 'react';\nimport AstroDialog from './Astro/AstroDialog';\nimport AstroGrid from './Astro/AstroGrid';\nimport AstroButton from './Astro/AstroButton';\n\nexport default class Airman extends React.Component {\n\n    constructor() {\n        super();\n        this.state = { showDialog: false,\n            columns:  {\n                id: 'ID', \n                firstName: 'First', \n                middleName: 'Middle',\n                lastName: 'Last',\n                title: 'Title', \n                email: 'Email',\n                afsc: 'AFSC', \n                etsDate: 'ETS',\n                ptDate: 'PT',\n                dodid: 'DODID',\n                fullName: 'Full Name'\n            },\n            fname: '',\n            mname :'',\n            lname: '',\n            title: '',\n            email: '',\n            afsc: '',\n            ets: '',\n            pt: '',\n            dodid: ''\n        };\n        this.URL = '/api/v1/airman';\n    }\n\n    clearAirmanData = () => {\n        this.setState({\n            fname: '',\n            mname :'',\n            lname: '',\n            title: '',\n            email: '',\n            afsc: '',\n            ets: '',\n            pt: '',\n            dodid: '' \n        })\n    }\n\n    componentDidMount = () => {\n        this.fetchAirman();\n    }\n\n    fetchAirman = async () => {\n        this.clearAirmanData();\n\n        try {\n            let response = await fetch (this.URL);\n            if (response.status === 200) {\n                let data = await response.json();        \n                this.setState({ rowData: data,});\n            }\n            else {\n                this.setState({rowData: []})\n            }\n        }\n        catch (e) {}\n    }\n\n    postAirman = async () => {\n        let response = await fetch(this.URL, {\n            method: 'POST',\n            headers: {\n                'Content-Type': 'application/json'\n            },\n            body: JSON.stringify(\n                {\n                    firstName: this.state.fname,\n                    middleName: this.state.mname,\n                    lastName: this.state.lname,\n                    title: this.state.title,\n                    email: this.state.email,\n                    afsc: this.state.afsc,\n                    etsDate: this.state.ets,\n                    ptDate: this.state.pt,\n                    dodid: this.state.dodid,\n                }\n            ),\n        })\n\n        this.fetchAirman();\n        this.setState({ showDialog: false });\n    }\n\n    render() {\n        return (\n            <div style={{paddingTop: 20, display: 'flex', flexDirection: 'column', width: '100%'}}>\n                <div style={{ width: '100%', display: 'flex', justifyContent: 'flex-end', paddingBottom: 20}}>\n                    <AstroButton title=\"Add Airman\" onClick={() => this.setState({ showDialog: true })}/>\n                </div>\n                <div style={{ height: '900', width: '100%'}}>\n                    <AstroGrid rowData={this.state.rowData} columns={this.state.columns} />\n                </div>\n                <AstroDialog\n                    show={this.state.showDialog}\n                    cancelText=\"Close\"\n                    onCancel={() => this.setState({ showDialog: false })}\n                    confirmText=\"Ok\"\n                    onConfirm={() => this.postAirman()}\n                    title=\"Dialog\"\n                    body=\"Hello\"\n                >\n                    <form>                        \n                        <div className=\"rux-form-field\" style={{padding: 5, width: 150, display: 'inline-block'}}>\n                            <label htmlFor=\"input__fname\">First Name</label>\n                            <input \n                                id=\"input__fname\"\n                                className=\"rux-input\"\n                                type=\"text\"\n                                required\n                                value={this.state.fname}\n                                onChange={(e) => this.setState({ fname: e.target.value })}\n                                placeholder=\"First Name\" \n                            />                            \n                        </div>\n                        <div className=\"rux-form-field\" style={{padding: 5, width: 150,  display: 'inline-block'}}>\n                            <label htmlFor=\"input__mname\">Middle Name</label>\n                            <input \n                                id=\"input__mname\"\n                                className=\"rux-input\"\n                                type=\"text\"\n                                value={this.state.mname}\n                                onChange={(e) => this.setState({ mname: e.target.value })}\n                                placeholder=\"Middle Name\" \n                            />                            \n                        </div>\n                        <div className=\"rux-form-field\" style={{padding: 5, width: 150, display: 'inline-block' }}>\n                            <label htmlFor=\"input__lname\">Last Name</label>\n                            <input \n                                id=\"input__lname\"\n                                className=\"rux-input\"\n                                type=\"text\"\n                                required\n                                placeholder=\"Last Name\" \n                                value={this.state.lname}\n                                onChange={(e) => this.setState({ lname: e.target.value })}\n                            />                            \n                        </div>\n                        <br />\n                        <div className=\"rux-form-field\" style={{padding: 5, width: 150, display: 'inline-block'}}>\n                            <label htmlFor=\"input__title\">Title</label>\n                            <input id=\"input__title\"\n                                className=\"rux-input\"\n                                type=\"text\"\n                                placeholder=\"Title\" \n                                value={this.state.title}\n                                onChange={(e) => this.setState({ title: e.target.value })}\n                            />                            \n                        </div>\n                        <div className=\"rux-form-field\" style={{padding: 5, width: 150,  display: 'inline-block'}}>\n                            <label htmlFor=\"input__email\">Email</label>\n                            <input id=\"input__email\"\n                                className=\"rux-input\"\n                                required type=\"email\"\n                                placeholder=\"Email\" \n                                value={this.state.email}\n                                onChange={(e) => this.setState({ email: e.target.value })} \n                            />                            \n                        </div>\n                        <br/>\n                        <div className=\"rux-form-field\" style={{padding: 5, width: 150, display: 'inline-block' }}>\n                            <label htmlFor=\"input__afsc\">AFSC</label>\n                            <input id=\"input__afsc\"\n                                className=\"rux-input\"\n                                type=\"text\"\n                                placeholder=\"AFSC\"\n                                value={this.state.afsc}\n                                onChange={(e) => this.setState({ afsc: e.target.value })}\n                            />                            \n                        </div>\n                        <div className=\"rux-form-field\" style={{padding: 5, width: 150, display: 'inline-block' }}>\n                            <label htmlFor=\"input__ets\">ETS</label>\n                            <input id=\"input__ets\"\n                                className=\"rux-input\"\n                                type=\"date\"\n                                placeholder=\"ETS\"\n                                value={this.state.ets}\n                                onChange={(e) => this.setState({ ets: e.target.value })} \n                            />                            \n                        </div>\n                        <div className=\"rux-form-field\" style={{padding: 5, width: 150, display: 'inline-block' }}>\n                            <label htmlFor=\"input__pts\">PT Date</label>\n                            <input id=\"input__pt\"\n                                className=\"rux-input\"\n                                type=\"date\"\n                                placeholder=\"PT Date\"\n                                value={this.state.pt}\n                                onChange={(e) => this.setState({ pt: e.target.value })}\n                            />                            \n                        </div>\n                        <br/>\n                        <div className=\"rux-form-field\" style={{padding: 5, width: 150, display: 'inline-block' }}>\n                            <label htmlFor=\"input__dodid\">DODID</label>\n                            <input id=\"input__dodid\"\n                                className=\"rux-input\"\n                                type=\"text\"\n                                placeholder=\"DODID\"\n                                value={this.state.dodid}\n                                onChange={(e) => this.setState({ dodid: e.target.value })}\n                            />                            \n                        </div> \n                    </form>\n                </AstroDialog>\n            </div>\n        )\n    }\n\n}","/Users/christopherzell/Developer/astro-components/src/Squadron.js",["140"],"/Users/christopherzell/Developer/astro-components/src/Astro/AstroTabCtrl.js",["141"],"/Users/christopherzell/Developer/astro-components/src/Astro/AstroDialog.js",[],"/Users/christopherzell/Developer/astro-components/src/Astro/AstroButton.js",[],"/Users/christopherzell/Developer/astro-components/src/Astro/AstroGrid.js",["142"],"import React, { useState } from 'react';\nimport { AgGridColumn, AgGridReact } from 'ag-grid-react';\n\nimport 'ag-grid-community/dist/styles/ag-grid.css';\nimport 'ag-grid-community/dist/styles/ag-theme-alpine.css';\nimport './astro-theme.scss';\n\n\n\nexport default function AstroGrid(props) {\n    if (props.columns == null) return null;\n\n    const onDelete = (data) => {\n        props.onDelete && props.onDelete(data);\n    }\n\n    return (\n        <div className=\"ag-theme-astro\" style={ { height: '900px', width: '100%'} } >\n            <AgGridReact\n                rowData={props.rowData}\n                autoSizeAllColumns\n                loadingCellRenderer={null}>\n                {\n                    Object.keys(props.columns).map(key => \n                        <AgGridColumn key={key}\n                            field={key}\n                            headerName={props.columns[key]}\n                            sortable\n                            resizable\n                        />                    \n                    )\n                }\n                <AgGridColumn \n                    headerName=\"Actions\" \n                    cellRendererFramework={({data}) =>\n                        <div style={{padding: 5,}}>\n                            <button className='rux-button rux-button--small' onClick={() => onDelete(data)}>X</button>\n                        </div>  \n                    } \n                />\n                    \n            </AgGridReact>\n        </div>\n    );\n}\n",["143","144"],{"ruleId":"145","replacedBy":"146"},{"ruleId":"147","replacedBy":"148"},{"ruleId":"149","severity":1,"message":"150","line":1,"column":10,"nodeType":"151","messageId":"152","endLine":1,"endColumn":19},{"ruleId":"149","severity":1,"message":"153","line":10,"column":9,"nodeType":"151","messageId":"152","endLine":10,"endColumn":13},{"ruleId":"149","severity":1,"message":"154","line":2,"column":10,"nodeType":"151","messageId":"152","endLine":2,"endColumn":25},{"ruleId":"149","severity":1,"message":"153","line":5,"column":11,"nodeType":"151","messageId":"152","endLine":5,"endColumn":15},{"ruleId":"149","severity":1,"message":"155","line":7,"column":13,"nodeType":"151","messageId":"152","endLine":7,"endColumn":22},{"ruleId":"149","severity":1,"message":"156","line":1,"column":17,"nodeType":"151","messageId":"152","endLine":1,"endColumn":25},{"ruleId":"157","severity":1,"message":"158","line":5,"column":5,"nodeType":"159","messageId":"160","endLine":7,"endColumn":6},{"ruleId":"149","severity":1,"message":"161","line":72,"column":13,"nodeType":"151","messageId":"152","endLine":72,"endColumn":21},{"ruleId":"145","replacedBy":"162"},{"ruleId":"147","replacedBy":"163"},{"ruleId":"149","severity":1,"message":"161","line":72,"column":13,"nodeType":"151","messageId":"152","endLine":72,"endColumn":21},{"ruleId":"157","severity":1,"message":"158","line":5,"column":5,"nodeType":"159","messageId":"160","endLine":7,"endColumn":6},{"ruleId":"149","severity":1,"message":"153","line":10,"column":9,"nodeType":"151","messageId":"152","endLine":10,"endColumn":13},{"ruleId":"149","severity":1,"message":"156","line":1,"column":17,"nodeType":"151","messageId":"152","endLine":1,"endColumn":25},{"ruleId":"145","replacedBy":"164"},{"ruleId":"147","replacedBy":"165"},"no-native-reassign",["166"],"no-negated-in-lhs",["167"],"no-unused-vars","'RuxStatus' is defined but never used.","Identifier","unusedVar","'type' is assigned a value but never used.","'RuxNotification' is defined but never used.","'childType' is assigned a value but never used.","'useState' is defined but never used.","no-useless-constructor","Useless constructor.","MethodDefinition","noUselessConstructor","'response' is assigned a value but never used.",["166"],["167"],["166"],["167"],"no-global-assign","no-unsafe-negation"]